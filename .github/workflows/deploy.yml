name: Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Deploy via SSH to server
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            # Caminhos
            PROJECT_PATH="/www/wwwroot/caiobook"
            LOG_DIR="$PROJECT_PATH/logs/deploy"

            # 1) prepara diretório de logs
            mkdir -p "$LOG_DIR" && chmod 755 "$LOG_DIR"

            # 2) nome do arquivo de log com timestamp
            TIMESTAMP=$(date +"%Y%m%d-%H%M%S")
            LOG_FILE="$LOG_DIR/deploy-$TIMESTAMP.log"

            echo "=== Deploy iniciado em $(date) ===" >> "$LOG_FILE"
            # todo output a partir de agora vai para o log e para o console da Action
            exec > >(tee -a "$LOG_FILE") 2>&1

            # 3) vai para a pasta pai do projeto
            cd "$(dirname "$PROJECT_PATH")" || { echo "Falha ao acessar $(dirname "$PROJECT_PATH")"; exit 1; }

            # 4) se não tiver clone, clona; senão atualiza
            if [ ! -d "caiobook/.git" ]; then
              echo "--- Repositório não encontrado. Clonando... ---"
              rm -rf caiobook
              git clone https://github.com/CaioXTSY/caiobook.git caiobook || { echo "Falha no clone"; exit 1; }
            fi

            cd caiobook

            # 5) atualiza o código
            echo "--- Atualizando código ---"
            git pull origin main

            # 6) (re)cria e ativa venv, instala dependências
            echo "--- Preparando ambiente Python ---"
            [ ! -d "venv" ] && python3 -m venv venv
            source venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt

            # 7) reinicia o serviço
            echo "--- Reiniciando meu_notion.service ---"
            sudo systemctl restart meu_notion.service \
              && echo "Serviço reiniciado com sucesso." \
              || echo "Falha ao reiniciar serviço."

            echo "=== Deploy finalizado em $(date) ==="
            echo "Logs disponíveis em $LOG_FILE"
            echo "=== Fim do deploy ==="
            